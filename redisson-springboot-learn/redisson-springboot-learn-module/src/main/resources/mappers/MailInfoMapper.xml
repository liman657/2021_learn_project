<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.redisson.module.mapper.MailInfoMapper" >
  <resultMap id="BaseResultMap" type="com.learn.redisson.module.entity.MailInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="tos" property="tos" jdbcType="VARCHAR" />
    <result column="is_active" property="isActive" jdbcType="TINYINT" />
    <result column="is_delay" property="isDelay" jdbcType="TINYINT" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.learn.redisson.module.entity.MailInfo" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, subject, tos, is_active, is_delay, send_time, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mail_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mail_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.redisson.module.entity.MailInfo" >
    insert into mail_info (id, subject, tos, 
      is_active, is_delay, send_time, 
      create_time, update_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{tos,jdbcType=VARCHAR}, 
      #{isActive,jdbcType=TINYINT}, #{isDelay,jdbcType=TINYINT}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.learn.redisson.module.entity.MailInfo" >
    insert into mail_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="tos != null" >
        tos,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="isDelay != null" >
        is_delay,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="tos != null" >
        #{tos,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="isDelay != null" >
        #{isDelay,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.redisson.module.entity.MailInfo" >
    update mail_info
    <set >
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="tos != null" >
        tos = #{tos,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="isDelay != null" >
        is_delay = #{isDelay,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.learn.redisson.module.entity.MailInfo" >
    update mail_info
    set subject = #{subject,jdbcType=VARCHAR},
      tos = #{tos,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=TINYINT},
      is_delay = #{isDelay,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.redisson.module.entity.MailInfo" >
    update mail_info
    set subject = #{subject,jdbcType=VARCHAR},
      tos = #{tos,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=TINYINT},
      is_delay = #{isDelay,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="invalidateMail">
    update mail_info
    set
      is_active = 0,
      update_time = now()
    where is_active=1 and id = #{id}
  </update>

  <!--<select id="selectEmailById" resultType="java.lang.String">
    select tos from mail_info
    where is_active=1 and id = #{id}
  </select>-->

</mapper>





















