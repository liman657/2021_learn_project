<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.simpleblog.module.mapper.BlogImageMapper" >
  <resultMap id="BaseResultMap" type="com.learn.simpleblog.module.domain.BlogImage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="suffix" property="suffix" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="is_active" property="isActive" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, blog_id, name, size, suffix, file_url, is_active, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_image
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_image
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.simpleblog.module.domain.BlogImage" >
    insert into blog_image (id, blog_id, name, 
      size, suffix, file_url, 
      is_active, create_time)
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.learn.simpleblog.module.domain.BlogImage" >
    insert into blog_image
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="suffix != null" >
        suffix,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.simpleblog.module.domain.BlogImage" >
    update blog_image
    <set >
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.simpleblog.module.domain.BlogImage" >
    update blog_image
    set blog_id = #{blogId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectByBlogId" resultType="java.lang.String">
    SELECT concat(#{accessRootUrl}, file_url) AS imgUrl
    FROM blog_image
    WHERE is_active = 1 AND blog_id = #{blogId}
    ORDER BY create_time ASC
  </select>

  <update id="updateBlogById">
    update blog_image
      set blog_id = #{blogId}
    where id = #{id}
  </update>

  <update id="updateBlogByIds">
    UPDATE blog_image
    SET blog_id = #{blogId}
    WHERE
        id IN (${ids})
  </update>


  <!--查询已被删除的微博的图片 或者 已上传但是却没有被微博关联的图片-->
  <select id="selectDeletedImage" resultType="com.learn.simpleblog.module.domain.BlogImageDto">
    SELECT
    c.id,
    concat(#{rootUrl},c.fileUrl) AS fileUrl
    FROM (

      SELECT
        id,
        file_url AS fileUrl
      FROM blog_image AS a
      WHERE a.blog_id IN (SELECT id FROM blog WHERE is_delete = 1)

      UNION

      SELECT
        id,
        file_url AS fileUrl
      FROM blog_image AS b
      WHERE (b.blog_id IS NULL OR b.blog_id = '') AND
        <![CDATA[ date_format(b.create_time, '%Y-%m-%d') < date_format(now(), '%Y-%m-%d') ]]>

    ) AS c
    ORDER BY c.id
  </select>

  <!--批量删除微博图片-->
  <delete id="delBlogImages">
    delete from blog_image
    where id IN (${ids})
  </delete>



  <!--查询已被删除的微博的图片 或者 已上传但是却没有被微博关联的图片 elastic job-->
  <select id="selectDeletedImageJob" resultType="com.learn.simpleblog.module.domain.BlogImageDto">
    SELECT
      c.id,
      concat(#{rootUrl},c.fileUrl) AS fileUrl,
      is_active
    FROM (

      SELECT
        id,
        file_url AS fileUrl,
        is_active
      FROM blog_image AS a
      WHERE a.blog_id IN (SELECT id FROM blog WHERE is_delete = 1)

      UNION

      SELECT
        id,
        file_url AS fileUrl,
        is_active
      FROM blog_image AS b
      WHERE (b.blog_id IS NULL OR b.blog_id = '') AND
        <![CDATA[ date_format(b.create_time, '%Y-%m-%d') < date_format(now(), '%Y-%m-%d') ]]>

    ) AS c
    WHERE is_active=1
    <if test="params!=null and params!=''">
      ${params}
    </if>

    AND MOD(c.id,#{total}) IN (#{item})
  </select>

</mapper>























