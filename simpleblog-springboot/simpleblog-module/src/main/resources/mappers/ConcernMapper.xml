<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.simpleblog.module.mapper.ConcernMapper" >
  <resultMap id="BaseResultMap" type="com.learn.simpleblog.module.domain.Concern" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="concern_id" property="concernId" jdbcType="INTEGER" />
    <result column="concern_be_id" property="concernBeId" jdbcType="INTEGER" />
    <result column="concern_time" property="concernTime" jdbcType="TIMESTAMP" />
    <result column="is_active" property="isActive" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, concern_id, concern_be_id, concern_time, is_active, update_time, memo
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from concern
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from concern
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.simpleblog.module.domain.Concern" >
    insert into concern (id, concern_id, concern_be_id,
      concern_time, is_active, update_time, 
      memo)
    values (#{id,jdbcType=INTEGER}, #{concernId,jdbcType=INTEGER}, #{concernBeId,jdbcType=INTEGER}, 
      #{concernTime,jdbcType=TIMESTAMP}, #{isActive,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.learn.simpleblog.module.domain.Concern" >
    insert into concern
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="concernId != null" >
        concern_id,
      </if>
      <if test="concernBeId != null" >
        concern_be_id,
      </if>
      <if test="concernTime != null" >
        concern_time,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="memo != null" >
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="concernId != null" >
        #{concernId,jdbcType=INTEGER},
      </if>
      <if test="concernBeId != null" >
        #{concernBeId,jdbcType=INTEGER},
      </if>
      <if test="concernTime != null" >
        #{concernTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.simpleblog.module.domain.Concern" >
    update concern
    <set >
      <if test="concernId != null" >
        concern_id = #{concernId,jdbcType=INTEGER},
      </if>
      <if test="concernBeId != null" >
        concern_be_id = #{concernBeId,jdbcType=INTEGER},
      </if>
      <if test="concernTime != null" >
        concern_time = #{concernTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.simpleblog.module.domain.Concern" >
    update concern
    set concern_id = #{concernId,jdbcType=INTEGER},
      concern_be_id = #{concernBeId,jdbcType=INTEGER},
      concern_time = #{concernTime,jdbcType=TIMESTAMP},
      is_active = #{isActive,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="countByConcernBeId" resultType="java.lang.Integer">
    select count(1) as total
    from concern
    where concern_id = #{concernId} and concern_be_id=#{beConcernId} LIMIT 1
  </select>

  <delete id="deleteByConcernBeId">
    delete from concern
    where concern_id = #{concernId} and concern_be_id=#{beConcernId}
  </delete>


  <select id="countFansByUserId" resultType="java.lang.Integer">
    SELECT count(1) AS total
    FROM concern
    WHERE is_active=1 AND concern_be_id=#{userId}
  </select>

  <select id="countConcernsByUserId" resultType="java.lang.Integer">
    SELECT count(1) AS total
    FROM concern
    WHERE is_active=1 AND concern_id=#{userId}
  </select>


  <select id="selectMyConcerns" resultType="java.lang.Integer">
    SELECT concern_be_id
    FROM concern
    WHERE is_active = 1 AND concern_id = #{userId}
  </select>
  
</mapper>


















