<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coderman.foodie.mapper.FilmMapper" >
  <resultMap id="BaseResultMap" type="com.coderman.foodie.pojo.Film" >
    <id column="film_id" property="filmId" jdbcType="SMALLINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="release_year" property="releaseYear" jdbcType="DATE" />
    <result column="language_id" property="languageId" jdbcType="TINYINT" />
    <result column="original_language_id" property="originalLanguageId" jdbcType="TINYINT" />
    <result column="rental_duration" property="rentalDuration" jdbcType="TINYINT" />
    <result column="rental_rate" property="rentalRate" jdbcType="DECIMAL" />
    <result column="length" property="length" jdbcType="SMALLINT" />
    <result column="replacement_cost" property="replacementCost" jdbcType="DECIMAL" />
    <result column="rating" property="rating" jdbcType="CHAR" />
    <result column="special_features" property="specialFeatures" jdbcType="CHAR" />
    <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from film
    where film_id = #{filmId,jdbcType=SMALLINT}
  </delete>
  <insert id="insert" parameterType="com.coderman.foodie.pojo.Film" >
    insert into film (film_id, title, release_year, 
      language_id, original_language_id, rental_duration, 
      rental_rate, `length`, replacement_cost, 
      rating, special_features, last_update, 
      description)
    values (#{filmId,jdbcType=SMALLINT}, #{title,jdbcType=VARCHAR}, #{releaseYear,jdbcType=DATE}, 
      #{languageId,jdbcType=TINYINT}, #{originalLanguageId,jdbcType=TINYINT}, #{rentalDuration,jdbcType=TINYINT}, 
      #{rentalRate,jdbcType=DECIMAL}, #{length,jdbcType=SMALLINT}, #{replacementCost,jdbcType=DECIMAL}, 
      #{rating,jdbcType=CHAR}, #{specialFeatures,jdbcType=CHAR}, #{lastUpdate,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.coderman.foodie.pojo.Film" >
    update film
    set title = #{title,jdbcType=VARCHAR},
      release_year = #{releaseYear,jdbcType=DATE},
      language_id = #{languageId,jdbcType=TINYINT},
      original_language_id = #{originalLanguageId,jdbcType=TINYINT},
      rental_duration = #{rentalDuration,jdbcType=TINYINT},
      rental_rate = #{rentalRate,jdbcType=DECIMAL},
      `length` = #{length,jdbcType=SMALLINT},
      replacement_cost = #{replacementCost,jdbcType=DECIMAL},
      rating = #{rating,jdbcType=CHAR},
      special_features = #{specialFeatures,jdbcType=CHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where film_id = #{filmId,jdbcType=SMALLINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select film_id, title, release_year, language_id, original_language_id, rental_duration, 
    rental_rate, `length`, replacement_cost, rating, special_features, last_update, description
    from film
    where film_id = #{filmId,jdbcType=SMALLINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select film_id, title, release_year, language_id, original_language_id, rental_duration, 
    rental_rate, `length`, replacement_cost, rating, special_features, last_update, description
    from film
  </select>
</mapper>