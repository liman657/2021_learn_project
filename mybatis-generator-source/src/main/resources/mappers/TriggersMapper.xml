<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coderman.foodie.mapper.TriggersMapper" >
  <resultMap id="BaseResultMap" type="com.coderman.foodie.pojo.Triggers" >
    <result column="TRIGGER_CATALOG" property="triggerCatalog" jdbcType="VARCHAR" />
    <result column="TRIGGER_SCHEMA" property="triggerSchema" jdbcType="VARCHAR" />
    <result column="TRIGGER_NAME" property="triggerName" jdbcType="VARCHAR" />
    <result column="EVENT_MANIPULATION" property="eventManipulation" jdbcType="CHAR" />
    <result column="EVENT_OBJECT_CATALOG" property="eventObjectCatalog" jdbcType="VARCHAR" />
    <result column="EVENT_OBJECT_SCHEMA" property="eventObjectSchema" jdbcType="VARCHAR" />
    <result column="EVENT_OBJECT_TABLE" property="eventObjectTable" jdbcType="VARCHAR" />
    <result column="ACTION_ORDER" property="actionOrder" jdbcType="INTEGER" />
    <result column="ACTION_ORIENTATION" property="actionOrientation" jdbcType="VARCHAR" />
    <result column="ACTION_TIMING" property="actionTiming" jdbcType="CHAR" />
    <result column="ACTION_REFERENCE_OLD_ROW" property="actionReferenceOldRow" jdbcType="VARCHAR" />
    <result column="ACTION_REFERENCE_NEW_ROW" property="actionReferenceNewRow" jdbcType="VARCHAR" />
    <result column="CREATED" property="created" jdbcType="TIMESTAMP" />
    <result column="SQL_MODE" property="sqlMode" jdbcType="CHAR" />
    <result column="DEFINER" property="definer" jdbcType="VARCHAR" />
    <result column="CHARACTER_SET_CLIENT" property="characterSetClient" jdbcType="VARCHAR" />
    <result column="COLLATION_CONNECTION" property="collationConnection" jdbcType="VARCHAR" />
    <result column="DATABASE_COLLATION" property="databaseCollation" jdbcType="VARCHAR" />
    <result column="ACTION_CONDITION" property="actionCondition" jdbcType="BINARY" />
    <result column="ACTION_STATEMENT" property="actionStatement" jdbcType="LONGVARCHAR" />
    <result column="ACTION_REFERENCE_OLD_TABLE" property="actionReferenceOldTable" jdbcType="BINARY" />
    <result column="ACTION_REFERENCE_NEW_TABLE" property="actionReferenceNewTable" jdbcType="BINARY" />
  </resultMap>
  <insert id="insert" parameterType="com.coderman.foodie.pojo.Triggers" >
    insert into TRIGGERS (`TRIGGER_CATALOG`, `TRIGGER_SCHEMA`, `TRIGGER_NAME`, 
      EVENT_MANIPULATION, EVENT_OBJECT_CATALOG, EVENT_OBJECT_SCHEMA, 
      EVENT_OBJECT_TABLE, ACTION_ORDER, ACTION_ORIENTATION, 
      ACTION_TIMING, ACTION_REFERENCE_OLD_ROW, ACTION_REFERENCE_NEW_ROW, 
      CREATED, SQL_MODE, `DEFINER`, 
      CHARACTER_SET_CLIENT, COLLATION_CONNECTION, 
      DATABASE_COLLATION, ACTION_CONDITION, ACTION_STATEMENT, 
      ACTION_REFERENCE_OLD_TABLE, ACTION_REFERENCE_NEW_TABLE
      )
    values (#{triggerCatalog,jdbcType=VARCHAR}, #{triggerSchema,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, 
      #{eventManipulation,jdbcType=CHAR}, #{eventObjectCatalog,jdbcType=VARCHAR}, #{eventObjectSchema,jdbcType=VARCHAR}, 
      #{eventObjectTable,jdbcType=VARCHAR}, #{actionOrder,jdbcType=INTEGER}, #{actionOrientation,jdbcType=VARCHAR}, 
      #{actionTiming,jdbcType=CHAR}, #{actionReferenceOldRow,jdbcType=VARCHAR}, #{actionReferenceNewRow,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{sqlMode,jdbcType=CHAR}, #{definer,jdbcType=VARCHAR}, 
      #{characterSetClient,jdbcType=VARCHAR}, #{collationConnection,jdbcType=VARCHAR}, 
      #{databaseCollation,jdbcType=VARCHAR}, #{actionCondition,jdbcType=BINARY}, #{actionStatement,jdbcType=LONGVARCHAR}, 
      #{actionReferenceOldTable,jdbcType=BINARY}, #{actionReferenceNewTable,jdbcType=BINARY}
      )
  </insert>
  <select id="selectAll" resultMap="BaseResultMap" >
    select `TRIGGER_CATALOG`, `TRIGGER_SCHEMA`, `TRIGGER_NAME`, EVENT_MANIPULATION, EVENT_OBJECT_CATALOG, 
    EVENT_OBJECT_SCHEMA, EVENT_OBJECT_TABLE, ACTION_ORDER, ACTION_ORIENTATION, ACTION_TIMING, 
    ACTION_REFERENCE_OLD_ROW, ACTION_REFERENCE_NEW_ROW, CREATED, SQL_MODE, `DEFINER`, 
    CHARACTER_SET_CLIENT, COLLATION_CONNECTION, DATABASE_COLLATION, ACTION_CONDITION, 
    ACTION_STATEMENT, ACTION_REFERENCE_OLD_TABLE, ACTION_REFERENCE_NEW_TABLE
    from TRIGGERS
  </select>
</mapper>